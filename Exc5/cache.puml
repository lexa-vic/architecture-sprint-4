@startuml
actor Operator as Op
participant "Frontend (UI)" as FE
participant "Backend API" as BE
participant "Cache (Redis)" as Cache
database "Database" as DB

== Чтение списка заказов ==
Op -> FE: Открывает страницу списка заказов
FE -> BE: Запрос списка заказов (GET /orders?status=...)
BE -> Cache: Проверить данные в кэше
alt Кэш содержит данные
    Cache -> BE: Возвращает данные
else Кэш не содержит данных
    BE -> DB: Запрос списка заказов
    DB --> BE: Возвращает данные из базы
    BE -> Cache: Записывает данные в кэш
end
BE -> FE: Возвращает список заказов
FE -> Op: Отображает список заказов

== Изменение статуса заказа ==
Op -> FE: Обновляет статус заказа
FE -> BE: Запрос на изменение статуса (POST /orders/{id}/status)
BE -> DB: Обновить статус заказа в базе
DB --> BE: Подтверждение обновления
BE -> Cache: Сбросить/обновить запись в кэше
alt Кэш перезаписывается
    BE -> Cache: Обновляет кэш с новым статусом
else Кэш сбрасывается
    BE -> Cache: Удаляет устаревшую запись
end
BE -> FE: Подтверждение обновления статуса
FE -> Op: Отображает подтверждение

== Участники кеширования ==
note right of BE
- Backend API: Управляет логикой кэширования.
- Cache: Сохраняет данные для ускорения чтения.
- Database: Основное хранилище данных.
end note

@enduml
